#!/bin/sh /etc/rc.common
START=99
STOP=10

USE_PROCD=1

PROG=/usr/sbin/lora_pkt_fwd
CONFIGFILE=/etc/global_conf.json

reset_sx1301_board ()
{
	local pin_e=$1
	local gpiochip=$(echo "$((${pin_e} / 32))" | tr 012 ABC)
	local pin="pio$gpiochip$((${pin_e}-$((${pin_e} / 32))*32))"

	logger "lora_pkt_fwd: Reset SX1301 with pin ${pin}"

	if [ -d "/sys/class/gpio/${pin}" ]
	then
		echo 1 > /dev/null
	else
		echo ${pin_e} > /sys/class/gpio/export
		echo "out" > /sys/class/gpio/${pin}/direction
		sleep 1
	fi

	echo "1" > /sys/class/gpio/${pin}/value
	sleep 5
	echo "0" > /sys/class/gpio/${pin}/value
	sleep 1
	echo "0" > /sys/class/gpio/${pin}/value
	sleep 1
	echo "in" > /sys/class/gpio/${pin}/direction
	sleep 1

	logger "lora_pkt_fwd: SX1301 reset completed"
}

generate_global_conf()
{
	logger "lora_pkt_fwd: Generate ${CONFIGFILE}"
	cp /etc/lora/template.db /tmp/meteodata.db
	file1=$(gen_lora_global_conf)
	file2=$(cat ${CONFIGFILE})

	if [ "$file1" = "$file2" ]; then
		echo "Config is up-to-date"
	else
		echo "$file1" > ${CONFIGFILE}
		echo "Config file updated"
	fi
}

start_service()
{
	include /lib/functions

	logger "lora_pkt_fwd: Start"

	config_load lora_pkt_fwd

	generate_global_conf

	local reset_enable=$(uci get lora-global.SX1301_conf.enable_reset_pin)
	
	if [ ${reset_enable} == 1 ]; then
		reset_sx1301_board $(uci get lora-global.SX1301_conf.reset_pin)
	fi

	procd_open_instance
	procd_set_param command $PROG
	procd_set_param file ${CONFIGFILE}
	procd_set_param file /etc/config/lora-global
	procd_set_param respawn

	procd_set_param stdout 1
	procd_set_param stderr 1

	procd_close_instance
}

stop_service() {
    logger "lora_pkt_fwd: Stop"
    killall lora_pkt_fwd 
}
